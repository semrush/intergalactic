name: publish-release
on:
  repository_dispatch:
    types: [release-command]
  workflow_dispatch:
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
      - name: get release pull request name
        run: |
          echo "release_branch_name=${{ github.event.client_payload.pull_request.head.ref }}" >> $GITHUB_ENV
      - name: Github GPG Auth
        uses: crazy-max/ghaction-import-gpg@v4.4.0
        with:
          gpg_private_key: ${{ secrets.BOT_ACCOUNT_GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_committer_name: semrush-ci-whale
          git_committer_email: semrush-ci-whale@users.noreply.github.com
      - name: Github CLI auth
        run: |
          echo "${{ secrets.BOT_ACCOUNT_GITHUB_TOKEN }}" > ./.gh-auth-token.txt
          gh auth login --with-token < ./.gh-auth-token.txt
          rm ./.gh-auth-token.txt
      - name: checkout release branch
        run: |
          git fetch --all
          git checkout "${{ env.release_branch_name }}"
      - name: build components
        run: |
          pnpm install --frozen-lockfile
          pnpm build
      - name: build @semcore/ui
        run: |
          cd semcore/ui
          pnpm generate
      - name: NPM setup
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ".npmrc"
      - name: publish semcore/ui to npm
        env:
          SLACK_API_ENDPOINTS: ${{ secrets.SLACK_WEBHOOK_URLS }}
          SCREENSHOT_URL: ${{ secrets.SCREENSHOT_URL }}
        run: |
          pnpm legacy-publish --package ui --release current
      - name: add github release record
        run: |
          version="$(cat semcore/ui/package.json | jq -r .version)"
          git diff master --patch -- semcore/ui/CHANGELOG.md | grep '^+++' --invert-match | grep '^+' | cut -c 2- > .github-release-notes.txt
          gh release create "v$version" --title "v$version" --notes-file .github-release-notes.txt
          rm .github-release-notes.txt
      - name: merge pull request
        run: |
          gh pr ready "${{ env.release_branch_name }}"
          gh pr merge "${{ env.release_branch_name }}" --squash
