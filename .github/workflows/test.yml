name: test
on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-modules
        with:
          path: |
            node_modules
            */*/node_modules
            website/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}--${{ hashFiles('website/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          yarn --non-interactive --frozen-lockfile
          cd website
          yarn --non-interactive --frozen-lockfile
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Restore cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            website/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}--${{ hashFiles('website/yarn.lock') }}
      - name: Cache build
        uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            **/lib
            semcore/icon/**/*.js
            semcore/icon/**/*.mjs
            semcore/icon/**/*.d.ts
            semcore/illustration/**/*.js
            semcore/illustration/**/*.mjs
            semcore/illustration/**/*.d.ts
          key: build-${{ hashFiles('semcore/**', 'tools/**', 'tsconfig.json', 'yarn.lock') }}
      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: yarn build
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Restore cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            website/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}--${{ hashFiles('website/yarn.lock') }}
      - name: Restore cache build
        uses: actions/cache@v2
        with:
          path: |
            **/lib
            semcore/icon/**/*.js
            semcore/icon/**/*.mjs
            semcore/icon/**/*.d.ts
            semcore/illustration/**/*.js
            semcore/illustration/**/*.mjs
            semcore/illustration/**/*.d.ts
          key: build-${{ hashFiles('semcore/**', 'tools/**', 'tsconfig.json', 'yarn.lock') }}
      - name: Lint
        run: yarn lint
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Restore cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            website/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}--${{ hashFiles('website/yarn.lock') }}
      - name: Restore cache build
        uses: actions/cache@v2
        with:
          path: |
            **/lib
            semcore/icon/**/*.js
            semcore/icon/**/*.mjs
            semcore/icon/**/*.d.ts
            semcore/illustration/**/*.js
            semcore/illustration/**/*.mjs
            semcore/illustration/**/*.d.ts
          key: build-${{ hashFiles('semcore/**', 'tools/**', 'tsconfig.json', 'yarn.lock') }}
      - name: Test
        env:
          SCREENSHOT_URL: ${{ secrets.SCREENSHOT_URL }}
        run: yarn coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
  vo-setup:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-modules
        with:
          path: |
            node_modules
            */*/node_modules
            website/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}--${{ hashFiles('website/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          yarn --non-interactive --frozen-lockfile
          cd website
          yarn --non-interactive --frozen-lockfile
  vo-build-icons:
    runs-on: macos-latest
    needs: vo-setup
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Restore cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            website/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}--${{ hashFiles('website/yarn.lock') }}
      - name: Cache build
        uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            semcore/icon/**/*.js
            semcore/icon/**/*.d.ts
          key: build-icons-${{ hashFiles('semcore/icon', 'tsconfig.json', 'yarn.lock') }}
      - name: Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: yarn build:icons
  vo-test:
    runs-on: macos-latest
    needs:
      - vo-setup
      - vo-build-icons
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Restore cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            website/node_modules
          key: modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}--${{ hashFiles('website/yarn.lock') }}
      - name: Restore icons build cache
        uses: actions/cache@v2
        with:
          path: |
            semcore/icon/**/*.js
            semcore/icon/**/*.d.ts
          key: build-icons-${{ hashFiles('semcore/icon', 'tsconfig.json', 'yarn.lock') }}
      - name: Install Browser
        run: npx playwright install webkit
      - name: Enable VoiceOver Automation
        uses: guidepup/setup-action@0.4.0
      - name: Voice Over testing
        run: yarn vo-test
      - name: Github GPG Auth
        uses: crazy-max/ghaction-import-gpg@v4.4.0
        with:
          gpg_private_key: ${{ secrets.BOT_ACCOUNT_GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_committer_name: semrush-ci-whale
          git_committer_email: semrush-ci-whale@users.noreply.github.com
      - name: Push changed a11y reports
        run: git add . && git commit -m "[chore] automatically updated accessibility reports" && git push || echo "noting to commit"
