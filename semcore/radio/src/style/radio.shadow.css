@import '@semcore/utils/style/var.css';

SRadio {
  display: inline-flex;
  align-items: flex-start;
  cursor: pointer;
}

SRadio[disabled] {
  opacity: var(--intergalactic-opacity-disabled-opacity);
  cursor: default;
  pointer-events: none;
  user-select: none;
}

SText {
  margin-left: var(--intergalactic-spacing-spacing-2x);
}

SText[size='m'] {
  font-size: var(--intergalactic-fontSizes-fs-200);
  line-height: var(--intergalactic-lineHeights-lh-200);
}

SText[size='l'] {
  font-size: var(--intergalactic-fontSizes-fs-300);
  line-height: var(--intergalactic-lineHeights-lh-300);
}

SValue {
  position: relative;
  flex-shrink: 0;
  padding: 0;
  outline: none;
  z-index: 0;

  margin-top: var(--intergalactic-spacing-spacing-05x);

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--intergalactic-color-bg-primary-neutral);
    border: 1px solid;
    border-radius: 50%;
  }

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0;
    height: 0;
    border-radius: 50%;
    background: var(--intergalactic-color-bg-primary-neutral);
  }
}

SValue[size='m'] {
  width: 16px;
  height: 16px;
}

SValue[size='l'] {
  width: 20px;
  height: 20px;
}

SValue[state='normal']::before {
  border-color: var(--intergalactic-color-border-primary);
}

SValue[state='invalid']::before {
  border-color: var(--intergalactic-color-border-danger-active);
}

SControl {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
}

SControl:checked ~ SValue::before {
  border-color: var(--intergalactic-color-control-primary-info);
  background-color: var(--intergalactic-color-bg-primary-info);
}

SControl:checked ~ SValue[size='m']::after {
  width: 6px;
  height: 6px;
}

SControl:checked ~ SValue[size='l']::after {
  width: 8px;
  height: 8px;
}

SValue[state='normal'][keyboardFocused]::before {
  box-shadow: var(--intergalactic-boxShadow-keyboard-focus);
  border-color: var(--intergalactic-color-border-info-active);
}

SValue[state='invalid'][keyboardFocused]::before {
  box-shadow: var(--intergalactic-boxShadow-keyboard-focus-invalid);
}

SControl:checked ~ SValue[theme]::before {
  border-color: var(--theme);
  background-color: var(--theme);
}

SValue[state='normal'][theme]::before {
  border-color: var(--theme);
}
